<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	<context:component-scan base-package="cn.isoffice.teamwork.web.**" />

	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="cn.isoffice.teamwork.web.messages" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="useCodeAsDefaultMessage" value="true" />
	</bean>

	<!-- validation -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="validationMessageSource" ref="messageSource" />
	</bean>

	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<property name="defaultLocale">
			<bean class="java.util.Locale">
				<constructor-arg index="0" value="zh" />
				<constructor-arg index="1" value="CN" />
			</bean>
		</property>
	</bean>

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="org.gui.example.web.interceptor.LoginInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles/definitions.xml</value>
			</list>
		</property>
	</bean>

	<bean id="tilesViewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver">
		<property name="order" value="1" />
		<property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
	</bean>

	<mvc:annotation-driven enableMatrixVariables="true" content-negotiation-manager="contentNegotiationManager"
		validator="validator">
		<mvc:message-converters register-defaults="true">
			<ref bean="jsonHttpMessageConverter" />
			<ref bean="stringHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>

	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<!-- Turn off working out content type based on URL file extension, should fall back to looking at the Accept headers -->
		<property name="favorPathExtension" value="false" />
	</bean>

	<bean id="jsonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json</value>
			</list>
		</property>
	</bean>

	<bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
		<constructor-arg>
			<bean class="java.nio.charset.Charset" factory-method="forName">
				<constructor-arg value="utf-8" />
			</bean>
		</constructor-arg>
		<property name="writeAcceptCharset" value="false" />
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain</value>
			</list>
		</property>
	</bean>

	<!-- upload -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available; the maximum file size in bytes :10M=10000000 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- <property name="uploadTempDir" value="#{storage['storage.tmp']}"/> -->
		<property name="uploadTempDir">
			<bean class="org.springframework.core.io.FileSystemResource">
				<constructor-arg name="path" value="#{storage['storage.tmp']}" />
			</bean>
		</property>
		<property name="maxUploadSize" value="10000000" />
	</bean>
</beans>
